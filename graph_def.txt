node {
  name: "is_train"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "Placeholder"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Conv2D"
  op: "Conv2D"
  input: "ExpandDims"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/gamma/Assign"
  op: "Assign"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/gamma/read"
  op: "Identity"
  input: "batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/beta/Assign"
  op: "Assign"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/beta/read"
  op: "Identity"
  input: "batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/moving_mean/read"
  op: "Identity"
  input: "batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/moving_variance/read"
  op: "Identity"
  input: "batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/switch_t"
  op: "Identity"
  input: "batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/switch_f"
  op: "Identity"
  input: "batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/Const"
  op: "Const"
  input: "^batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Const_1"
  op: "Const"
  input: "^batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "batch_normalization/cond/Const"
  input: "batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "Conv2D"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization/gamma/read"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization/beta/read"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "Conv2D"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "batch_normalization/gamma/read"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "batch_normalization/beta/read"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "batch_normalization/moving_mean/read"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "batch_normalization/moving_variance/read"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Merge"
  op: "Merge"
  input: "batch_normalization/cond/FusedBatchNorm_1"
  input: "batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization/cond/FusedBatchNorm_1:1"
  input: "batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization/cond/FusedBatchNorm_1:2"
  input: "batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond_1/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/Const"
  op: "Const"
  input: "^batch_normalization/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization/cond_1/Const_1"
  input: "batch_normalization/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg/sub/x"
  input: "batch_normalization/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization/moving_mean/read"
  input: "batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg/sub_1"
  input: "batch_normalization/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg_1/sub/x"
  input: "batch_normalization/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization/moving_variance/read"
  input: "batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg_1/sub_1"
  input: "batch_normalization/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MaxPool"
  op: "MaxPool"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_1/mul"
  op: "Mul"
  input: "truncated_normal_1/TruncatedNormal"
  input: "truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_1"
  op: "Add"
  input: "truncated_normal_1/mul"
  input: "truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Conv2D_1"
  op: "Conv2D"
  input: "MaxPool"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/beta/read"
  op: "Identity"
  input: "batch_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/Const"
  op: "Const"
  input: "^batch_normalization_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_1/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_1/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_1/cond/FusedBatchNorm/Switch_2:1"
  input: "batch_normalization_1/cond/Const"
  input: "batch_normalization_1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "Conv2D_1"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_1"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_1/gamma/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_1/beta/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_2"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "Conv2D_1"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_1"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "batch_normalization_1/gamma/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "batch_normalization_1/beta/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "batch_normalization_1/moving_mean/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "batch_normalization_1/moving_variance/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_1/cond/FusedBatchNorm_1"
  input: "batch_normalization_1/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_1/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_1/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_1/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_1/cond_1/Const_1"
  input: "batch_normalization_1/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg/sub/x"
  input: "batch_normalization_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_1/moving_mean/read"
  input: "batch_normalization_1/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg/sub_1"
  input: "batch_normalization_1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_1/moving_variance/read"
  input: "batch_normalization_1/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "batch_normalization_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MaxPool_1"
  op: "MaxPool"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "truncated_normal_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_2/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_2/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "truncated_normal_2/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_2/mul"
  op: "Mul"
  input: "truncated_normal_2/TruncatedNormal"
  input: "truncated_normal_2/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_2"
  op: "Add"
  input: "truncated_normal_2/mul"
  input: "truncated_normal_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Assign"
  op: "Assign"
  input: "Variable_2"
  input: "truncated_normal_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/read"
  op: "Identity"
  input: "Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Conv2D_2"
  op: "Conv2D"
  input: "MaxPool_1"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/gamma/read"
  op: "Identity"
  input: "batch_normalization_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/beta/Assign"
  op: "Assign"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/beta/read"
  op: "Identity"
  input: "batch_normalization_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/Const"
  op: "Const"
  input: "^batch_normalization_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_2/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_2/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_2/cond/FusedBatchNorm/Switch_2:1"
  input: "batch_normalization_2/cond/Const"
  input: "batch_normalization_2/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "Conv2D_2"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_2"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_2/gamma/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_2/beta/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_2"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "Conv2D_2"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_2"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "batch_normalization_2/gamma/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "batch_normalization_2/beta/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "batch_normalization_2/moving_mean/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "batch_normalization_2/moving_variance/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/Merge"
  op: "Merge"
  input: "batch_normalization_2/cond/FusedBatchNorm_1"
  input: "batch_normalization_2/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_2/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_2/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_2/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_2/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_2/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_2/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_2/cond_1/Const_1"
  input: "batch_normalization_2/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg/sub/x"
  input: "batch_normalization_2/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_2/moving_mean/read"
  input: "batch_normalization_2/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg/sub_1"
  input: "batch_normalization_2/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_2/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_2/moving_variance/read"
  input: "batch_normalization_2/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_2/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_2"
  op: "Relu"
  input: "batch_normalization_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MaxPool_2"
  op: "MaxPool"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "truncated_normal_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_3/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_3/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "truncated_normal_3/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_3/mul"
  op: "Mul"
  input: "truncated_normal_3/TruncatedNormal"
  input: "truncated_normal_3/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_3"
  op: "Add"
  input: "truncated_normal_3/mul"
  input: "truncated_normal_3/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Assign"
  op: "Assign"
  input: "Variable_3"
  input: "truncated_normal_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/read"
  op: "Identity"
  input: "Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "Conv2D_3"
  op: "Conv2D"
  input: "MaxPool_2"
  input: "Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/read"
  op: "Identity"
  input: "batch_normalization_3/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/beta/Assign"
  op: "Assign"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/beta/read"
  op: "Identity"
  input: "batch_normalization_3/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/Const"
  op: "Const"
  input: "^batch_normalization_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_3/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_3/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_3/cond/FusedBatchNorm/Switch_2:1"
  input: "batch_normalization_3/cond/Const"
  input: "batch_normalization_3/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "Conv2D_3"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_3"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_3/gamma/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_3/beta/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_2"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "Conv2D_3"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_3"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "batch_normalization_3/gamma/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "batch_normalization_3/beta/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "batch_normalization_3/moving_mean/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "batch_normalization_3/moving_variance/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/Merge"
  op: "Merge"
  input: "batch_normalization_3/cond/FusedBatchNorm_1"
  input: "batch_normalization_3/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_3/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_3/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_3/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_3/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_3/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_3/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_3/cond_1/Const_1"
  input: "batch_normalization_3/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg/sub/x"
  input: "batch_normalization_3/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_3/moving_mean/read"
  input: "batch_normalization_3/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg/sub_1"
  input: "batch_normalization_3/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_3/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_3/moving_variance/read"
  input: "batch_normalization_3/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_3/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_3"
  op: "Relu"
  input: "batch_normalization_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MaxPool_3"
  op: "MaxPool"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "truncated_normal_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_4/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_4/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "truncated_normal_4/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_4/mul"
  op: "Mul"
  input: "truncated_normal_4/TruncatedNormal"
  input: "truncated_normal_4/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_4"
  op: "Add"
  input: "truncated_normal_4/mul"
  input: "truncated_normal_4/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_4"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/Assign"
  op: "Assign"
  input: "Variable_4"
  input: "truncated_normal_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/read"
  op: "Identity"
  input: "Variable_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
}
node {
  name: "Conv2D_4"
  op: "Conv2D"
  input: "MaxPool_3"
  input: "Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/gamma/read"
  op: "Identity"
  input: "batch_normalization_4/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/beta/Assign"
  op: "Assign"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/beta/read"
  op: "Identity"
  input: "batch_normalization_4/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/Const"
  op: "Const"
  input: "^batch_normalization_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_4/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_4/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_4/cond/FusedBatchNorm/Switch_2:1"
  input: "batch_normalization_4/cond/Const"
  input: "batch_normalization_4/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "Conv2D_4"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_4"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_4/gamma/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_4/beta/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_2"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "Conv2D_4"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2D_4"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "batch_normalization_4/gamma/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "batch_normalization_4/beta/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "batch_normalization_4/moving_mean/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "batch_normalization_4/moving_variance/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/Merge"
  op: "Merge"
  input: "batch_normalization_4/cond/FusedBatchNorm_1"
  input: "batch_normalization_4/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_4/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_4/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_4/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_4/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_4/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_4/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_4/cond_1/Const_1"
  input: "batch_normalization_4/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg/sub/x"
  input: "batch_normalization_4/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_4/moving_mean/read"
  input: "batch_normalization_4/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg/sub_1"
  input: "batch_normalization_4/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_4/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_4/moving_variance/read"
  input: "batch_normalization_4/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_4/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_4"
  op: "Relu"
  input: "batch_normalization_4/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MaxPool_4"
  op: "MaxPool"
  input: "Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "MaxPool_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "bidirectional_rnn/fw/fw/range/start"
  input: "bidirectional_rnn/fw/fw/Rank"
  input: "bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/concat/values_0"
  input: "bidirectional_rnn/fw/fw/range"
  input: "bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "Squeeze"
  input: "bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/fw/fw/Shape"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/Const"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/Const_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "bidirectional_rnn/fw/fw/Shape_1"
  input: "bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "bidirectional_rnn/fw/fw/Shape_2"
  input: "bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice_2"
  input: "bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/ExpandDims"
  input: "bidirectional_rnn/fw/fw/Const"
  input: "bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/concat_1"
  input: "bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "bidirectional_rnn/fw/fw/TensorArray_1"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "bidirectional_rnn/fw/fw/transpose"
  input: "bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "bidirectional_rnn/fw/fw/Maximum/x"
  input: "bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "bidirectional_rnn/fw/fw/strided_slice_1"
  input: "bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Enter_4"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Enter_5"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Enter_6"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "bidirectional_rnn/fw/fw/while/Enter"
  input: "bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "bidirectional_rnn/fw/fw/while/Enter_1"
  input: "bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "bidirectional_rnn/fw/fw/while/Enter_2"
  input: "bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "bidirectional_rnn/fw/fw/while/Enter_3"
  input: "bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Merge_4"
  op: "Merge"
  input: "bidirectional_rnn/fw/fw/while/Enter_4"
  input: "bidirectional_rnn/fw/fw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Merge_5"
  op: "Merge"
  input: "bidirectional_rnn/fw/fw/while/Enter_5"
  input: "bidirectional_rnn/fw/fw/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Merge_6"
  op: "Merge"
  input: "bidirectional_rnn/fw/fw/while/Enter_6"
  input: "bidirectional_rnn/fw/fw/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "bidirectional_rnn/fw/fw/while/Merge"
  input: "bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "bidirectional_rnn/fw/fw/while/Merge_1"
  input: "bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bidirectional_rnn/fw/fw/while/Less"
  input: "bidirectional_rnn/fw/fw/while/Less_1"
}
node {
  name: "bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "bidirectional_rnn/fw/fw/while/LogicalAnd"
}
node {
  name: "bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "bidirectional_rnn/fw/fw/while/Merge"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "bidirectional_rnn/fw/fw/while/Merge_1"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "bidirectional_rnn/fw/fw/while/Merge_2"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "bidirectional_rnn/fw/fw/while/Merge_3"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Switch_4"
  op: "Switch"
  input: "bidirectional_rnn/fw/fw/while/Merge_4"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Merge_4"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Switch_5"
  op: "Switch"
  input: "bidirectional_rnn/fw/fw/while/Merge_5"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Merge_5"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Switch_6"
  op: "Switch"
  input: "bidirectional_rnn/fw/fw/while/Merge_6"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Merge_6"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Identity_4"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Identity_5"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Identity_6"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/Identity"
  input: "bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "bidirectional_rnn/fw/fw/while/Identity_1"
  input: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat/axis"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "bidirectional_rnn/fw/fw/while/Identity_4"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Const"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split/split_dim"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split/split_dim"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add/y"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split:2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat/axis"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  input: "bidirectional_rnn/fw/fw/while/Identity_6"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Const"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split/split_dim"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split/split_dim"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add/y"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split:2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "bidirectional_rnn/fw/fw/while/Identity_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  input: "bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/Identity_1"
  input: "bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/NextIteration_5"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/NextIteration_6"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Exit_4"
  op: "Exit"
  input: "bidirectional_rnn/fw/fw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Exit_5"
  op: "Exit"
  input: "bidirectional_rnn/fw/fw/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/Exit_6"
  op: "Exit"
  input: "bidirectional_rnn/fw/fw/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "bidirectional_rnn/fw/fw/TensorArray"
  input: "bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "bidirectional_rnn/fw/fw/TensorArray"
  input: "bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "bidirectional_rnn/fw/fw/range_1/start"
  input: "bidirectional_rnn/fw/fw/Rank_1"
  input: "bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "bidirectional_rnn/fw/fw/range_1"
  input: "bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/ReverseV2"
  op: "ReverseV2"
  input: "Squeeze"
  input: "bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "bidirectional_rnn/bw/bw/range/start"
  input: "bidirectional_rnn/bw/bw/Rank"
  input: "bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/concat/values_0"
  input: "bidirectional_rnn/bw/bw/range"
  input: "bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "bidirectional_rnn/bw/ReverseV2"
  input: "bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/bw/bw/Shape"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/Const"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/Const_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/concat_1"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "bidirectional_rnn/bw/bw/Shape_1"
  input: "bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "bidirectional_rnn/bw/bw/Shape_2"
  input: "bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice_2"
  input: "bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/ExpandDims"
  input: "bidirectional_rnn/bw/bw/Const"
  input: "bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/concat_1"
  input: "bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "bidirectional_rnn/bw/bw/TensorArray_1"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "bidirectional_rnn/bw/bw/transpose"
  input: "bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "bidirectional_rnn/bw/bw/Maximum/x"
  input: "bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "bidirectional_rnn/bw/bw/strided_slice_1"
  input: "bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Enter_4"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Enter_5"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Enter_6"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "bidirectional_rnn/bw/bw/while/Enter"
  input: "bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "bidirectional_rnn/bw/bw/while/Enter_1"
  input: "bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "bidirectional_rnn/bw/bw/while/Enter_2"
  input: "bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "bidirectional_rnn/bw/bw/while/Enter_3"
  input: "bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Merge_4"
  op: "Merge"
  input: "bidirectional_rnn/bw/bw/while/Enter_4"
  input: "bidirectional_rnn/bw/bw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Merge_5"
  op: "Merge"
  input: "bidirectional_rnn/bw/bw/while/Enter_5"
  input: "bidirectional_rnn/bw/bw/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Merge_6"
  op: "Merge"
  input: "bidirectional_rnn/bw/bw/while/Enter_6"
  input: "bidirectional_rnn/bw/bw/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "bidirectional_rnn/bw/bw/while/Merge"
  input: "bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "bidirectional_rnn/bw/bw/while/Merge_1"
  input: "bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bidirectional_rnn/bw/bw/while/Less"
  input: "bidirectional_rnn/bw/bw/while/Less_1"
}
node {
  name: "bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "bidirectional_rnn/bw/bw/while/LogicalAnd"
}
node {
  name: "bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "bidirectional_rnn/bw/bw/while/Merge"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "bidirectional_rnn/bw/bw/while/Merge_1"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "bidirectional_rnn/bw/bw/while/Merge_2"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "bidirectional_rnn/bw/bw/while/Merge_3"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Switch_4"
  op: "Switch"
  input: "bidirectional_rnn/bw/bw/while/Merge_4"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Merge_4"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Switch_5"
  op: "Switch"
  input: "bidirectional_rnn/bw/bw/while/Merge_5"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Merge_5"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Switch_6"
  op: "Switch"
  input: "bidirectional_rnn/bw/bw/while/Merge_6"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Merge_6"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Identity_4"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Identity_5"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Identity_6"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/while/Identity"
  input: "bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "bidirectional_rnn/bw/bw/while/Identity_1"
  input: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1/axis"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "bidirectional_rnn/bw/bw/while/Identity_4"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Const_1"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1/split_dim"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1/split_dim"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2/y"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1:2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3"
  input: "bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1/axis"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5"
  input: "bidirectional_rnn/bw/bw/while/Identity_6"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Const_1"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1/split_dim"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1/split_dim"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2/y"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1:2"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3"
  input: "bidirectional_rnn/bw/bw/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "bidirectional_rnn/bw/bw/while/Identity_1"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
  input: "bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/while/Identity_1"
  input: "bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/NextIteration_5"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/NextIteration_6"
  op: "NextIteration"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Exit_4"
  op: "Exit"
  input: "bidirectional_rnn/bw/bw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Exit_5"
  op: "Exit"
  input: "bidirectional_rnn/bw/bw/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/while/Exit_6"
  op: "Exit"
  input: "bidirectional_rnn/bw/bw/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "bidirectional_rnn/bw/bw/TensorArray"
  input: "bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "bidirectional_rnn/bw/bw/TensorArray"
  input: "bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "bidirectional_rnn/bw/bw/range_1/start"
  input: "bidirectional_rnn/bw/bw/Rank_1"
  input: "bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "bidirectional_rnn/bw/bw/range_1"
  input: "bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ReverseV2"
  op: "ReverseV2"
  input: "bidirectional_rnn/bw/bw/transpose_1"
  input: "ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/transpose_1"
  input: "ReverseV2"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "concat"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "truncated_normal_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_5/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_5/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "truncated_normal_5/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_5/mul"
  op: "Mul"
  input: "truncated_normal_5/TruncatedNormal"
  input: "truncated_normal_5/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_5"
  op: "Add"
  input: "truncated_normal_5/mul"
  input: "truncated_normal_5/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_5"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_5/Assign"
  op: "Assign"
  input: "Variable_5"
  input: "truncated_normal_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_5/read"
  op: "Identity"
  input: "Variable_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
}
node {
  name: "convolution"
  op: "Conv2D"
  input: "ExpandDims_1"
  input: "Variable_5/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Squeeze_1"
  op: "Squeeze"
  input: "convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 2
      }
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "Squeeze_1"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "CTCLoss"
  op: "CTCLoss"
  input: "transpose"
  input: "Placeholder_1"
  input: "Placeholder_2"
  input: "Placeholder_4"
  attr {
    key: "ctc_merge_repeated"
    value {
      b: true
    }
  }
  attr {
    key: "ignore_longer_outputs_than_inputs"
    value {
      b: false
    }
  }
  attr {
    key: "preprocess_collapse_repeated"
    value {
      b: false
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "CTCLoss"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: -1
        }
        dim {
          size: 80
        }
      }
    }
  }
}
node {
  name: "CTCLoss_1"
  op: "CTCLoss"
  input: "Placeholder_5"
  input: "Placeholder_1"
  input: "Placeholder_2"
  input: "Placeholder_4"
  attr {
    key: "ctc_merge_repeated"
    value {
      b: true
    }
  }
  attr {
    key: "ignore_longer_outputs_than_inputs"
    value {
      b: false
    }
  }
  attr {
    key: "preprocess_collapse_repeated"
    value {
      b: false
    }
  }
}
node {
  name: "CTCGreedyDecoder"
  op: "CTCGreedyDecoder"
  input: "transpose"
  input: "Placeholder_4"
  attr {
    key: "merge_repeated"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  input: "^gradients/Add/Identity"
  input: "^gradients/Add/Identity_1"
  input: "^gradients/Add/Identity_2"
  input: "^gradients/Add/Identity_3"
  input: "^gradients/Add/Identity_4"
  input: "^gradients/Add/Identity_5"
  input: "^gradients/Add/Identity_6"
  input: "^gradients/Add/Identity_7"
  input: "^gradients/Add/Identity_8"
  input: "^gradients/Add/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_1/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_2/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_3/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_4/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_5/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_6/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_7/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_8/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add/Identity_9/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count_3"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_4"
  op: "Enter"
  input: "gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_2"
  op: "Merge"
  input: "gradients/f_count_4"
  input: "gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "gradients/Merge_2"
  input: "bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_1/y"
  op: "Const"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  input: "^gradients/Add_1/Identity"
  input: "^gradients/Add_1/Identity_1"
  input: "^gradients/Add_1/Identity_2"
  input: "^gradients/Add_1/Identity_3"
  input: "^gradients/Add_1/Identity_4"
  input: "^gradients/Add_1/Identity_5"
  input: "^gradients/Add_1/Identity_6"
  input: "^gradients/Add_1/Identity_7"
  input: "^gradients/Add_1/Identity_8"
  input: "^gradients/Add_1/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_1/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_2/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_3/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_4/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_5/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_6/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_7/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_8/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Add_1/Identity_9/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Add_1"
  op: "Add"
  input: "gradients/Switch_2:1"
  input: "gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration_2"
  op: "NextIteration"
  input: "gradients/Add_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPushV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count_5"
  op: "Exit"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_4"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_5"
  op: "Enter"
  input: "gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_3"
  op: "Merge"
  input: "gradients/b_count_5"
  input: "gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/Merge_3"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_6"
  op: "LoopCond"
  input: "gradients/GreaterEqual_1"
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "gradients/Merge_3"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sub_1"
  op: "Sub"
  input: "gradients/Switch_3:1"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration_3"
  op: "NextIteration"
  input: "gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_7"
  op: "Exit"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "CTCLoss"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Shape"
  input: "CTCLoss"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "CTCLoss:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CTCLoss_grad/PreventGradient"
  op: "PreventGradient"
  input: "CTCLoss:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second  derivative of ctc_loss due to the fused implementation\'s interaction  with tf.gradients()"
    }
  }
}
node {
  name: "gradients/CTCLoss_grad/ExpandDims/dim"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/CTCLoss_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/CTCLoss_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CTCLoss_grad/mul"
  op: "Mul"
  input: "gradients/CTCLoss_grad/ExpandDims"
  input: "gradients/CTCLoss_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "transpose/perm"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/CTCLoss_grad/mul"
  input: "gradients/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_1_grad/Shape"
  op: "Shape"
  input: "convolution"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/transpose_grad/transpose"
  input: "gradients/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "ExpandDims_1"
  input: "Variable_5/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/convolution_grad/ShapeN"
  input: "Variable_5/read"
  input: "gradients/Squeeze_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ExpandDims_1"
  input: "gradients/convolution_grad/ShapeN:1"
  input: "gradients/Squeeze_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/convolution_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/ExpandDims_1_grad/Shape"
  op: "Shape"
  input: "concat"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/convolution_grad/tuple/control_dependency"
  input: "gradients/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/Rank"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "gradients/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/transpose_1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ShapeN"
  op: "ShapeN"
  input: "bidirectional_rnn/fw/fw/transpose_1"
  input: "ReverseV2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_grad/mod"
  input: "gradients/concat_grad/ShapeN"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_grad/Slice"
  op: "Slice"
  input: "gradients/ExpandDims_1_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset"
  input: "gradients/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/ExpandDims_1_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset:1"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/Slice_1"
}
node {
  name: "gradients/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_grad/Slice_1"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bidirectional_rnn/fw/fw/concat_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/concat_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "gradients/concat_grad/tuple/control_dependency_1"
  input: "ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "bidirectional_rnn/fw/fw/TensorArray"
  input: "bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "gradients/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "gradients/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "bidirectional_rnn/fw/fw/while/Exit_3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "bidirectional_rnn/fw/fw/while/Exit_4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "bidirectional_rnn/fw/fw/while/Exit_5"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "bidirectional_rnn/fw/fw/while/Exit_6"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bidirectional_rnn/bw/bw/concat_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/ReverseV2_grad/ReverseV2"
  input: "gradients/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "bidirectional_rnn/bw/bw/TensorArray"
  input: "bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "gradients/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "gradients/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "bidirectional_rnn/bw/bw/while/Exit_3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "bidirectional_rnn/bw/bw/while/Exit_4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "bidirectional_rnn/bw/bw/while/Exit_5"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "bidirectional_rnn/bw/bw/while/Exit_6"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/Exit_5_grad/b_exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/Exit_6_grad/b_exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/Switch"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/bw/bw/while/Exit_5_grad/b_exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "gradients/bidirectional_rnn/bw/bw/while/Exit_6_grad/b_exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  op: "RefEnter"
  input: "batch_normalization/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_3/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_2/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  op: "RefEnter"
  input: "batch_normalization_1/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/Switch"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/Switch:1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/TensorArray"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_6_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/TensorArray"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPopV2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_6_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_5_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/Identity_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_5_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_3_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/bw/bw/while/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/Enter"
  input: "bidirectional_rnn/bw/bw/while/Identity_5"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split:2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_grad/TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1:2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_9"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Tanh_2_grad/TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/add_2_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_9"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/split_1_grad/concat"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Const"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "bidirectional_rnn/fw/fw/while/Identity_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/mod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_4"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Const"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Enter_1"
  input: "bidirectional_rnn/bw/bw/while/Identity_6"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/mod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_3_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/Enter"
  input: "bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/control_dependency_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split:2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/Mul/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_grad/TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1:2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Sum_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_9"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Tanh_2_grad/TanhGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/add_2_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_9"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/split_1_grad/concat"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Const"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add/Identity_1/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add/Identity/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add/Identity_3/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add/Identity_5/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add/Identity_4/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add/Identity_6/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add/Identity_7/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add/Identity_8/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add/Identity_9/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add/Identity_2/RefEnter"
  input: "^bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter"
  input: "bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "bidirectional_rnn/fw/fw/while/Identity_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/mod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/TensorArray_1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Const"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity"
  op: "Identity"
  input: "gradients/Add_1/Identity_1/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_1"
  op: "Identity"
  input: "gradients/Add_1/Identity/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_2"
  op: "Identity"
  input: "gradients/Add_1/Identity_9/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_3"
  op: "Identity"
  input: "gradients/Add_1/Identity_2/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_4"
  op: "Identity"
  input: "gradients/Add_1/Identity_4/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_5"
  op: "Identity"
  input: "gradients/Add_1/Identity_3/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_6"
  op: "Identity"
  input: "gradients/Add_1/Identity_5/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_7"
  op: "Identity"
  input: "gradients/Add_1/Identity_6/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_8"
  op: "Identity"
  input: "gradients/Add_1/Identity_7/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Shape/Identity_9"
  op: "Identity"
  input: "gradients/Add_1/Identity_8/RefEnter"
  input: "^bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Enter"
  input: "bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Enter_1"
  input: "bidirectional_rnn/bw/bw/while/Identity_4"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/mod"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ConcatOffset"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_2"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_4"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_5"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_6"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_7"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_8"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_9"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice_1"
  input: "^gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/TensorArray_1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_8"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_8"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_8/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_9"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_9/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "bidirectional_rnn/fw/fw/TensorArray_1"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bidirectional_rnn/fw/fw/concat"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "bidirectional_rnn/bw/bw/TensorArray_1"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bidirectional_rnn/bw/bw/concat"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "gradients/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "gradients/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "gradients/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bidirectional_rnn/fw/fw/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Shape"
  op: "Shape"
  input: "MaxPool_4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_12"
  input: "gradients/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MaxPool_4_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Relu_4"
  input: "MaxPool_4"
  input: "gradients/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Relu_4_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MaxPool_4_grad/MaxPoolGrad"
  input: "Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/Relu_4_grad/ReluGrad"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_4_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_4/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/Merge_grad/cond_grad"
  input: "^gradients/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_4_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/Merge_grad/cond_grad:1"
  input: "^gradients/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_4_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_4/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_4/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_4/cond/FusedBatchNorm:3"
  input: "batch_normalization_4/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "Conv2D_4"
  input: "batch_normalization_4/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity"
  op: "Identity"
  input: "gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Fill"
  input: "gradients/Shape_1"
  input: "gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "batch_normalization_4/gamma/read"
  input: "batch_normalization_4/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_1"
  op: "Identity"
  input: "gradients/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_1/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Fill"
  input: "gradients/Shape_2"
  input: "gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "batch_normalization_4/beta/read"
  input: "batch_normalization_4/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_2"
  op: "Identity"
  input: "gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_2/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_2"
  op: "Fill"
  input: "gradients/Shape_3"
  input: "gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "Conv2D_4"
  input: "batch_normalization_4/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_3"
  op: "Identity"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_3/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_3"
  op: "Fill"
  input: "gradients/Shape_4"
  input: "gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_3"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_8"
  op: "Switch"
  input: "batch_normalization_4/gamma/read"
  input: "batch_normalization_4/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_4"
  op: "Identity"
  input: "gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_4/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_4"
  op: "Fill"
  input: "gradients/Shape_5"
  input: "gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_4"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_9"
  op: "Switch"
  input: "batch_normalization_4/beta/read"
  input: "batch_normalization_4/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_5"
  op: "Identity"
  input: "gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_5/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_5"
  op: "Fill"
  input: "gradients/Shape_6"
  input: "gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_5"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool_3"
  input: "Variable_4/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_4_grad/ShapeN"
  input: "Variable_4/read"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool_3"
  input: "gradients/Conv2D_4_grad/ShapeN:1"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_4_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_4_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_4_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_4_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/MaxPool_3_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Relu_3"
  input: "MaxPool_3"
  input: "gradients/Conv2D_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MaxPool_3_grad/MaxPoolGrad"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/Relu_3_grad/ReluGrad"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_3_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_3/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/Merge_grad/cond_grad"
  input: "^gradients/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_3_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/Merge_grad/cond_grad:1"
  input: "^gradients/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_3_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_3/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_3/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_3/cond/FusedBatchNorm:3"
  input: "batch_normalization_3/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_10"
  op: "Switch"
  input: "Conv2D_3"
  input: "batch_normalization_3/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_6"
  op: "Identity"
  input: "gradients/Switch_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/Switch_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_6/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_6"
  op: "Fill"
  input: "gradients/Shape_7"
  input: "gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_11"
  op: "Switch"
  input: "batch_normalization_3/gamma/read"
  input: "batch_normalization_3/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_7"
  op: "Identity"
  input: "gradients/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_7/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_7"
  op: "Fill"
  input: "gradients/Shape_8"
  input: "gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_12"
  op: "Switch"
  input: "batch_normalization_3/beta/read"
  input: "batch_normalization_3/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_8"
  op: "Identity"
  input: "gradients/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_9"
  op: "Shape"
  input: "gradients/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_8/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_8"
  op: "Fill"
  input: "gradients/Shape_9"
  input: "gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_13"
  op: "Switch"
  input: "Conv2D_3"
  input: "batch_normalization_3/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_9"
  op: "Identity"
  input: "gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_10"
  op: "Shape"
  input: "gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_9/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_9"
  op: "Fill"
  input: "gradients/Shape_10"
  input: "gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_9"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_14"
  op: "Switch"
  input: "batch_normalization_3/gamma/read"
  input: "batch_normalization_3/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_10"
  op: "Identity"
  input: "gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_11"
  op: "Shape"
  input: "gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_10/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_10"
  op: "Fill"
  input: "gradients/Shape_11"
  input: "gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_10"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_15"
  op: "Switch"
  input: "batch_normalization_3/beta/read"
  input: "batch_normalization_3/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_11"
  op: "Identity"
  input: "gradients/Switch_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_12"
  op: "Shape"
  input: "gradients/Switch_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_11/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_11"
  op: "Fill"
  input: "gradients/Shape_12"
  input: "gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_11"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool_2"
  input: "Variable_3/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_3_grad/ShapeN"
  input: "Variable_3/read"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool_2"
  input: "gradients/Conv2D_3_grad/ShapeN:1"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_3_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_3_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_3_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_3_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/MaxPool_2_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Relu_2"
  input: "MaxPool_2"
  input: "gradients/Conv2D_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MaxPool_2_grad/MaxPoolGrad"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_2_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_2/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/Merge_grad/cond_grad"
  input: "^gradients/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_2_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/Merge_grad/cond_grad:1"
  input: "^gradients/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_2_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_2/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_2/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_2/cond/FusedBatchNorm:3"
  input: "batch_normalization_2/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_16"
  op: "Switch"
  input: "Conv2D_2"
  input: "batch_normalization_2/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_12"
  op: "Identity"
  input: "gradients/Switch_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_13"
  op: "Shape"
  input: "gradients/Switch_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_12/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_12"
  op: "Fill"
  input: "gradients/Shape_13"
  input: "gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_17"
  op: "Switch"
  input: "batch_normalization_2/gamma/read"
  input: "batch_normalization_2/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_13"
  op: "Identity"
  input: "gradients/Switch_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_14"
  op: "Shape"
  input: "gradients/Switch_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_13/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_13"
  op: "Fill"
  input: "gradients/Shape_14"
  input: "gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_18"
  op: "Switch"
  input: "batch_normalization_2/beta/read"
  input: "batch_normalization_2/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_14"
  op: "Identity"
  input: "gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_15"
  op: "Shape"
  input: "gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_14/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_14"
  op: "Fill"
  input: "gradients/Shape_15"
  input: "gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_19"
  op: "Switch"
  input: "Conv2D_2"
  input: "batch_normalization_2/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_15"
  op: "Identity"
  input: "gradients/Switch_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_16"
  op: "Shape"
  input: "gradients/Switch_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_15/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_15"
  op: "Fill"
  input: "gradients/Shape_16"
  input: "gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_15"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_20"
  op: "Switch"
  input: "batch_normalization_2/gamma/read"
  input: "batch_normalization_2/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_16"
  op: "Identity"
  input: "gradients/Switch_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_17"
  op: "Shape"
  input: "gradients/Switch_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_16/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_16"
  op: "Fill"
  input: "gradients/Shape_17"
  input: "gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_16"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_21"
  op: "Switch"
  input: "batch_normalization_2/beta/read"
  input: "batch_normalization_2/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_17"
  op: "Identity"
  input: "gradients/Switch_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_18"
  op: "Shape"
  input: "gradients/Switch_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_17/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_17"
  op: "Fill"
  input: "gradients/Shape_18"
  input: "gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_17"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool_1"
  input: "Variable_2/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_2_grad/ShapeN"
  input: "Variable_2/read"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool_1"
  input: "gradients/Conv2D_2_grad/ShapeN:1"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/MaxPool_1_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Relu_1"
  input: "MaxPool_1"
  input: "gradients/Conv2D_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MaxPool_1_grad/MaxPoolGrad"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_1/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/Merge_grad/cond_grad"
  input: "^gradients/batch_normalization_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/Merge_grad/cond_grad:1"
  input: "^gradients/batch_normalization_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_1/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_1/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization_1/cond/FusedBatchNorm:3"
  input: "batch_normalization_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_22"
  op: "Switch"
  input: "Conv2D_1"
  input: "batch_normalization_1/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_18"
  op: "Identity"
  input: "gradients/Switch_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_19"
  op: "Shape"
  input: "gradients/Switch_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_18/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_18"
  op: "Fill"
  input: "gradients/Shape_19"
  input: "gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_23"
  op: "Switch"
  input: "batch_normalization_1/gamma/read"
  input: "batch_normalization_1/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_19"
  op: "Identity"
  input: "gradients/Switch_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_20"
  op: "Shape"
  input: "gradients/Switch_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_19/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_19"
  op: "Fill"
  input: "gradients/Shape_20"
  input: "gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_24"
  op: "Switch"
  input: "batch_normalization_1/beta/read"
  input: "batch_normalization_1/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_20"
  op: "Identity"
  input: "gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_21"
  op: "Shape"
  input: "gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_20/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_20"
  op: "Fill"
  input: "gradients/Shape_21"
  input: "gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_25"
  op: "Switch"
  input: "Conv2D_1"
  input: "batch_normalization_1/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_21"
  op: "Identity"
  input: "gradients/Switch_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_22"
  op: "Shape"
  input: "gradients/Switch_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_21/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_21"
  op: "Fill"
  input: "gradients/Shape_22"
  input: "gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_21"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_26"
  op: "Switch"
  input: "batch_normalization_1/gamma/read"
  input: "batch_normalization_1/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_22"
  op: "Identity"
  input: "gradients/Switch_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_23"
  op: "Shape"
  input: "gradients/Switch_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_22/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_22"
  op: "Fill"
  input: "gradients/Shape_23"
  input: "gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_22"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_27"
  op: "Switch"
  input: "batch_normalization_1/beta/read"
  input: "batch_normalization_1/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_23"
  op: "Identity"
  input: "gradients/Switch_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_24"
  op: "Shape"
  input: "gradients/Switch_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_23/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_23"
  op: "Fill"
  input: "gradients/Shape_24"
  input: "gradients/zeros_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_23"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool"
  input: "Variable_1/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_1_grad/ShapeN"
  input: "Variable_1/read"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool"
  input: "gradients/Conv2D_1_grad/ShapeN:1"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Relu"
  input: "MaxPool"
  input: "gradients/Conv2D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MaxPool_grad/MaxPoolGrad"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/Relu_grad/ReluGrad"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "batch_normalization/cond/FusedBatchNorm:3"
  input: "batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_28"
  op: "Switch"
  input: "Conv2D"
  input: "batch_normalization/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_24"
  op: "Identity"
  input: "gradients/Switch_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_25"
  op: "Shape"
  input: "gradients/Switch_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_24/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_24"
  op: "Fill"
  input: "gradients/Shape_25"
  input: "gradients/zeros_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_24"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_29"
  op: "Switch"
  input: "batch_normalization/gamma/read"
  input: "batch_normalization/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_25"
  op: "Identity"
  input: "gradients/Switch_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_26"
  op: "Shape"
  input: "gradients/Switch_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_25/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_25"
  op: "Fill"
  input: "gradients/Shape_26"
  input: "gradients/zeros_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_25"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_30"
  op: "Switch"
  input: "batch_normalization/beta/read"
  input: "batch_normalization/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_26"
  op: "Identity"
  input: "gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_27"
  op: "Shape"
  input: "gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_26/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_26"
  op: "Fill"
  input: "gradients/Shape_27"
  input: "gradients/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_26"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_31"
  op: "Switch"
  input: "Conv2D"
  input: "batch_normalization/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_27"
  op: "Identity"
  input: "gradients/Switch_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_28"
  op: "Shape"
  input: "gradients/Switch_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_27/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_27"
  op: "Fill"
  input: "gradients/Shape_28"
  input: "gradients/zeros_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_27"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_32"
  op: "Switch"
  input: "batch_normalization/gamma/read"
  input: "batch_normalization/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_28"
  op: "Identity"
  input: "gradients/Switch_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_29"
  op: "Shape"
  input: "gradients/Switch_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_28/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_28"
  op: "Fill"
  input: "gradients/Shape_29"
  input: "gradients/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_28"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_33"
  op: "Switch"
  input: "batch_normalization/beta/read"
  input: "batch_normalization/cond/pred_id"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_29"
  op: "Identity"
  input: "gradients/Switch_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_30"
  op: "Shape"
  input: "gradients/Switch_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_29/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_29"
  op: "Fill"
  input: "gradients/Shape_30"
  input: "gradients/zeros_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_29"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ExpandDims"
  input: "Variable/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_grad/ShapeN"
  input: "Variable/read"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ExpandDims"
  input: "gradients/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "Variable/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/RMSProp/Assign"
  op: "Assign"
  input: "Variable/RMSProp"
  input: "Variable/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/RMSProp/read"
  op: "Identity"
  input: "Variable/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable/RMSProp_1"
  input: "Variable/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/RMSProp_1/read"
  op: "Identity"
  input: "Variable/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization/gamma/RMSProp"
  input: "batch_normalization/gamma/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp/read"
  op: "Identity"
  input: "batch_normalization/gamma/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization/gamma/RMSProp_1"
  input: "batch_normalization/gamma/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/gamma/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization/gamma/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization/beta/RMSProp"
  input: "batch_normalization/beta/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp/read"
  op: "Identity"
  input: "batch_normalization/beta/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization/beta/RMSProp_1"
  input: "batch_normalization/beta/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/beta/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization/beta/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Variable_1/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Variable_1/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/RMSProp/Assign"
  op: "Assign"
  input: "Variable_1/RMSProp"
  input: "Variable_1/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/RMSProp/read"
  op: "Identity"
  input: "Variable_1/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_1/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_1/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_1/RMSProp_1"
  input: "Variable_1/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/read"
  op: "Identity"
  input: "Variable_1/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_1/gamma/RMSProp"
  input: "batch_normalization_1/gamma/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_1/gamma/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_1/gamma/RMSProp_1"
  input: "batch_normalization_1/gamma/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_1/gamma/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_1/beta/RMSProp"
  input: "batch_normalization_1/beta/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_1/beta/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_1/beta/RMSProp_1"
  input: "batch_normalization_1/beta/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/beta/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_1/beta/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Variable_2/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Variable_2/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_2/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/RMSProp/Assign"
  op: "Assign"
  input: "Variable_2/RMSProp"
  input: "Variable_2/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/RMSProp/read"
  op: "Identity"
  input: "Variable_2/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_2/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_2/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_2/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_2/RMSProp_1"
  input: "Variable_2/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/read"
  op: "Identity"
  input: "Variable_2/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_2/gamma/RMSProp"
  input: "batch_normalization_2/gamma/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_2/gamma/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_2/gamma/RMSProp_1"
  input: "batch_normalization_2/gamma/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/gamma/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_2/gamma/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_2/beta/RMSProp"
  input: "batch_normalization_2/beta/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_2/beta/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_2/beta/RMSProp_1"
  input: "batch_normalization_2/beta/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/beta/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_2/beta/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Variable_3/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Variable_3/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_3/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/RMSProp/Assign"
  op: "Assign"
  input: "Variable_3/RMSProp"
  input: "Variable_3/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/RMSProp/read"
  op: "Identity"
  input: "Variable_3/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_3/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_3/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_3/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_3/RMSProp_1"
  input: "Variable_3/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/read"
  op: "Identity"
  input: "Variable_3/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_3/gamma/RMSProp"
  input: "batch_normalization_3/gamma/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_3/gamma/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_3/gamma/RMSProp_1"
  input: "batch_normalization_3/gamma/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_3/gamma/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_3/beta/RMSProp"
  input: "batch_normalization_3/beta/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_3/beta/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_3/beta/RMSProp_1"
  input: "batch_normalization_3/beta/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/beta/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_3/beta/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Variable_4/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Variable_4/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_4/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/RMSProp/Assign"
  op: "Assign"
  input: "Variable_4/RMSProp"
  input: "Variable_4/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/RMSProp/read"
  op: "Identity"
  input: "Variable_4/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_4/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_4/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_4/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_4/RMSProp_1"
  input: "Variable_4/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/read"
  op: "Identity"
  input: "Variable_4/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_4/gamma/RMSProp"
  input: "batch_normalization_4/gamma/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_4/gamma/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_4/gamma/RMSProp_1"
  input: "batch_normalization_4/gamma/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/gamma/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_4/gamma/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp/Assign"
  op: "Assign"
  input: "batch_normalization_4/beta/RMSProp"
  input: "batch_normalization_4/beta/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp/read"
  op: "Identity"
  input: "batch_normalization_4/beta/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp_1/Assign"
  op: "Assign"
  input: "batch_normalization_4/beta/RMSProp_1"
  input: "batch_normalization_4/beta/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/beta/RMSProp_1/read"
  op: "Identity"
  input: "batch_normalization_4/beta/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/Initializer/ones"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/Initializer/ones/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/Initializer/ones"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/Initializer/ones/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1/read"
  op: "Identity"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "Variable_5/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_5/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_5/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Variable_5/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Variable_5/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_5/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_5/RMSProp/Assign"
  op: "Assign"
  input: "Variable_5/RMSProp"
  input: "Variable_5/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_5/RMSProp/read"
  op: "Identity"
  input: "Variable_5/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
}
node {
  name: "Variable_5/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_5/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_5/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_5/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_5/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_5/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_5/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_5/RMSProp_1"
  input: "Variable_5/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_5/RMSProp_1/read"
  op: "Identity"
  input: "Variable_5/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
}
node {
  name: "RMSProp/decay"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "RMSProp/momentum"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSProp/epsilon"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "RMSProp/update_Variable/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable"
  input: "Variable/RMSProp"
  input: "Variable/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization/gamma/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/RMSProp"
  input: "batch_normalization/gamma/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization/beta/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/RMSProp"
  input: "batch_normalization/beta/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_Variable_1/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_1"
  input: "Variable_1/RMSProp"
  input: "Variable_1/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_1/gamma/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/RMSProp"
  input: "batch_normalization_1/gamma/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_1/beta/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/RMSProp"
  input: "batch_normalization_1/beta/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_Variable_2/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_2"
  input: "Variable_2/RMSProp"
  input: "Variable_2/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/Conv2D_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_2/gamma/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/RMSProp"
  input: "batch_normalization_2/gamma/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_2/beta/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/RMSProp"
  input: "batch_normalization_2/beta/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_Variable_3/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_3"
  input: "Variable_3/RMSProp"
  input: "Variable_3/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/Conv2D_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_3/gamma/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/RMSProp"
  input: "batch_normalization_3/gamma/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_3/beta/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/RMSProp"
  input: "batch_normalization_3/beta/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_Variable_4/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_4"
  input: "Variable_4/RMSProp"
  input: "Variable_4/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/Conv2D_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_4/gamma/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/RMSProp"
  input: "batch_normalization_4/gamma/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_batch_normalization_4/beta/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/RMSProp"
  input: "batch_normalization_4/beta/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp/update_Variable_5/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_5"
  input: "Variable_5/RMSProp"
  input: "Variable_5/RMSProp_1"
  input: "Placeholder_6"
  input: "RMSProp/decay"
  input: "RMSProp/momentum"
  input: "RMSProp/epsilon"
  input: "gradients/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "RMSProp"
  op: "NoOp"
  input: "^RMSProp/update_Variable/ApplyRMSProp"
  input: "^RMSProp/update_Variable_1/ApplyRMSProp"
  input: "^RMSProp/update_Variable_2/ApplyRMSProp"
  input: "^RMSProp/update_Variable_3/ApplyRMSProp"
  input: "^RMSProp/update_Variable_4/ApplyRMSProp"
  input: "^RMSProp/update_Variable_5/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization/beta/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization/gamma/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_1/beta/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_1/gamma/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_2/beta/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_2/gamma/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_3/beta/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_3/gamma/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_4/beta/ApplyRMSProp"
  input: "^RMSProp/update_batch_normalization_4/gamma/ApplyRMSProp"
  input: "^RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyRMSProp"
  input: "^RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyRMSProp"
  input: "^RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyRMSProp"
  input: "^RMSProp/update_bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyRMSProp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 70
          }
        }
        string_val: "Variable"
        string_val: "Variable/RMSProp"
        string_val: "Variable/RMSProp_1"
        string_val: "Variable_1"
        string_val: "Variable_1/RMSProp"
        string_val: "Variable_1/RMSProp_1"
        string_val: "Variable_2"
        string_val: "Variable_2/RMSProp"
        string_val: "Variable_2/RMSProp_1"
        string_val: "Variable_3"
        string_val: "Variable_3/RMSProp"
        string_val: "Variable_3/RMSProp_1"
        string_val: "Variable_4"
        string_val: "Variable_4/RMSProp"
        string_val: "Variable_4/RMSProp_1"
        string_val: "Variable_5"
        string_val: "Variable_5/RMSProp"
        string_val: "Variable_5/RMSProp_1"
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/beta/RMSProp"
        string_val: "batch_normalization/beta/RMSProp_1"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/gamma/RMSProp"
        string_val: "batch_normalization/gamma/RMSProp_1"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/beta/RMSProp"
        string_val: "batch_normalization_1/beta/RMSProp_1"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/gamma/RMSProp"
        string_val: "batch_normalization_1/gamma/RMSProp_1"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/beta/RMSProp"
        string_val: "batch_normalization_2/beta/RMSProp_1"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/gamma/RMSProp"
        string_val: "batch_normalization_2/gamma/RMSProp_1"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/beta/RMSProp"
        string_val: "batch_normalization_3/beta/RMSProp_1"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/gamma/RMSProp"
        string_val: "batch_normalization_3/gamma/RMSProp_1"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/beta/RMSProp"
        string_val: "batch_normalization_4/beta/RMSProp_1"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/gamma/RMSProp"
        string_val: "batch_normalization_4/gamma/RMSProp_1"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 70
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Variable"
  input: "Variable/RMSProp"
  input: "Variable/RMSProp_1"
  input: "Variable_1"
  input: "Variable_1/RMSProp"
  input: "Variable_1/RMSProp_1"
  input: "Variable_2"
  input: "Variable_2/RMSProp"
  input: "Variable_2/RMSProp_1"
  input: "Variable_3"
  input: "Variable_3/RMSProp"
  input: "Variable_3/RMSProp_1"
  input: "Variable_4"
  input: "Variable_4/RMSProp"
  input: "Variable_4/RMSProp_1"
  input: "Variable_5"
  input: "Variable_5/RMSProp"
  input: "Variable_5/RMSProp_1"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/RMSProp"
  input: "batch_normalization/beta/RMSProp_1"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/RMSProp"
  input: "batch_normalization/gamma/RMSProp_1"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/RMSProp"
  input: "batch_normalization_1/beta/RMSProp_1"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/RMSProp"
  input: "batch_normalization_1/gamma/RMSProp_1"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/RMSProp"
  input: "batch_normalization_2/beta/RMSProp_1"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/RMSProp"
  input: "batch_normalization_2/gamma/RMSProp_1"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/RMSProp"
  input: "batch_normalization_3/beta/RMSProp_1"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/RMSProp"
  input: "batch_normalization_3/gamma/RMSProp_1"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/RMSProp"
  input: "batch_normalization_4/beta/RMSProp_1"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/RMSProp"
  input: "batch_normalization_4/gamma/RMSProp_1"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/moving_variance"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 70
          }
        }
        string_val: "Variable"
        string_val: "Variable/RMSProp"
        string_val: "Variable/RMSProp_1"
        string_val: "Variable_1"
        string_val: "Variable_1/RMSProp"
        string_val: "Variable_1/RMSProp_1"
        string_val: "Variable_2"
        string_val: "Variable_2/RMSProp"
        string_val: "Variable_2/RMSProp_1"
        string_val: "Variable_3"
        string_val: "Variable_3/RMSProp"
        string_val: "Variable_3/RMSProp_1"
        string_val: "Variable_4"
        string_val: "Variable_4/RMSProp"
        string_val: "Variable_4/RMSProp_1"
        string_val: "Variable_5"
        string_val: "Variable_5/RMSProp"
        string_val: "Variable_5/RMSProp_1"
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/beta/RMSProp"
        string_val: "batch_normalization/beta/RMSProp_1"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/gamma/RMSProp"
        string_val: "batch_normalization/gamma/RMSProp_1"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/beta/RMSProp"
        string_val: "batch_normalization_1/beta/RMSProp_1"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/gamma/RMSProp"
        string_val: "batch_normalization_1/gamma/RMSProp_1"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/beta/RMSProp"
        string_val: "batch_normalization_2/beta/RMSProp_1"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/gamma/RMSProp"
        string_val: "batch_normalization_2/gamma/RMSProp_1"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/beta/RMSProp"
        string_val: "batch_normalization_3/beta/RMSProp_1"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/gamma/RMSProp"
        string_val: "batch_normalization_3/gamma/RMSProp_1"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/beta/RMSProp"
        string_val: "batch_normalization_4/beta/RMSProp_1"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/gamma/RMSProp"
        string_val: "batch_normalization_4/gamma/RMSProp_1"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
        string_val: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 70
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Variable/RMSProp"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Variable/RMSProp_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Variable_1/RMSProp"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Variable_1/RMSProp_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Variable_2"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Variable_2/RMSProp"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Variable_2/RMSProp_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Variable_3"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Variable_3/RMSProp"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Variable_3/RMSProp_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Variable_4"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Variable_4/RMSProp"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Variable_4/RMSProp_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Variable_5"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Variable_5/RMSProp"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Variable_5/RMSProp_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "batch_normalization/beta"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "batch_normalization/beta/RMSProp"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "batch_normalization/beta/RMSProp_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "batch_normalization/gamma"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "batch_normalization/gamma/RMSProp"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "batch_normalization/gamma/RMSProp_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "batch_normalization/moving_mean"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "batch_normalization/moving_variance"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "batch_normalization_1/beta"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "batch_normalization_1/beta/RMSProp"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "batch_normalization_1/beta/RMSProp_1"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "batch_normalization_1/gamma"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "batch_normalization_1/gamma/RMSProp"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "batch_normalization_1/gamma/RMSProp_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "batch_normalization_1/moving_mean"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "batch_normalization_1/moving_variance"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "batch_normalization_2/beta"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "batch_normalization_2/beta/RMSProp"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "batch_normalization_2/beta/RMSProp_1"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "batch_normalization_2/gamma"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "batch_normalization_2/gamma/RMSProp"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "batch_normalization_2/gamma/RMSProp_1"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "batch_normalization_2/moving_mean"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "batch_normalization_2/moving_variance"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "batch_normalization_3/beta"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "batch_normalization_3/beta/RMSProp"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "batch_normalization_3/beta/RMSProp_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "batch_normalization_3/gamma"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "batch_normalization_3/gamma/RMSProp"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "batch_normalization_3/gamma/RMSProp_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "batch_normalization_3/moving_mean"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "batch_normalization_3/moving_variance"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "batch_normalization_4/beta"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "batch_normalization_4/beta/RMSProp"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "batch_normalization_4/beta/RMSProp_1"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "batch_normalization_4/gamma"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "batch_normalization_4/gamma/RMSProp"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "batch_normalization_4/gamma/RMSProp_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "batch_normalization_4/moving_mean"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "batch_normalization_4/moving_variance"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias/RMSProp_1"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel/RMSProp_1"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias/RMSProp_1"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel/RMSProp_1"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bidirectional_rnn/fw/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
versions {
  producer: 38
}
